name: Create release

defaults:
  run:
    shell: powershell

on:
  push:
    paths: 
      - 'templates/**'
    branches: [ main ]

jobs:
  new-version:
    name: Bump version
    if: "!contains(github.event.head_commit.message, '[no release]')"
    runs-on: windows-2019
    outputs:
      previous_tag: ${{ steps.bump.outputs.previous_tag }}
      new_tag: ${{ steps.bump.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v2
      - id: bump
        name: Bump version
        run: |
          $today = Get-Date
          $newVersion = @($today.ToString("yy"), $today.ToString("MM"), "1")
          git fetch --tags
          $hash = git rev-list --tags --topo-order --max-count=1
          if($hash) {
            $currentTag = git describe --tags $hash
            $parts = $currentTag.Substring(1) -split '\.'
            if($parts[1] -eq $today.ToString("MM") -and $parts[0] -eq $today.ToString("yy")) { $newVersion[2] = ([int]$parts[2] + 1).ToString("0") }
          }
          
          $newTag = "v" + ($newVersion -join ".")
          git tag $newTag
          "New version: $newTag"
          echo "previous_tag=$currentTag" >> $GITHUB_OUTPUT
          echo "new_tag=$newTag" >> $GITHUB_OUTPUT
      
      - name: Push version tag
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

  new-release:
    name: Create release
    if: "!contains(github.event.head_commit.message, '[no release]')"
    runs-on: windows-2019
    needs: new-version
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build scripts 
        shell: powershell
        run: |
          ./build.ps1 -Version ${{ needs.new-version.outputs.new_tag }}
      - name: Create changelog
        id: changelog
        shell: powershell
        run: |
          if("${{ needs.new-version.outputs.previous_tag }}" -ne "") {
            $changelog = (& { git log ${{ needs.new-version.outputs.previous_tag }}..HEAD --pretty=format:'- %s (%h)' --abbrev-commit -- templates }) -join '%0D%0A'
            "Changes for ${{ needs.new-version.outputs.previous_tag }} are:"
            $changelog
          } else {
            $changelog = ""
          }
          echo "changelog=$changelog" >> $GITHUB_OUTPUT
        
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.new-version.outputs.new_tag }} # ${{ github.ref }}
          release_name: Release ${{ needs.new-version.outputs.new_tag }} # ${{ github.ref }}
          body: |
            Changes in this version:
            ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: output/*
          tag: ${{ needs.new-version.outputs.new_tag }}
          overwrite: true
          file_glob: true
